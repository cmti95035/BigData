<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion> 
	
  <parent>
  	<groupId>com.cmti</groupId>
  	<artifactId>analytics</artifactId>
  	<version>1.0-SNAPSHOT</version>
  </parent>

    <groupId>com.cmti</groupId>    
	<artifactId>tracking-app</artifactId>
	<packaging>jar</packaging>
	<version>${global.version}</version>
	<name>Tracking application</name>


	<build>
		<plugins>
			<!-- download and include source and javadoc in eclipse -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
          		<version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            
			<!-- Pack as a single jar for running -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<id>make-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
              				<transformers>
              				<!-- http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html -->
                				<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  					<resource>META-INF/spring.handlers</resource>
                				</transformer>
                				<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  					<resource>META-INF/spring.schemas</resource>
                				</transformer>
              				</transformers>
              				<filters>
                				<filter>
       								<artifact>org.springframework:spring-tx</artifact>
                  					<includes>
                    					<include>**</include>
                  					</includes>
                				</filter>
                				<filter>
       								<artifact>org.slf4j:log4j-over-slf4j</artifact>
                  					<includes>
                    					<include>**</include>
                  					</includes>
                				</filter>
                				<!-- filter>
       								<artifact>junit:junit</artifact>
                  					<includes>
                    					<include>junit/framework/**</include>
                    					<include>org/junit/**</include>
                  					</includes>
                  					<excludes>
                    					<exclude>org/junit/experimental/**</exclude>
                    					<exclude>org/junit/runners/**</exclude>
                  					</excludes>
                				</filter-->
                				<filter>
       								<artifact>junit:junit</artifact>
                  					<excludes>
                    					<exclude>**</exclude>
                  					</excludes>
                				</filter>
                				<filter>
                  					<artifact>*:*</artifact>
                  					<excludes>
                    					<exclude>META-INF/*.SF</exclude>
                    					<exclude>META-INF/*.DSA</exclude>
                    					<exclude>META-INF/*.RSA</exclude>
                    					<exclude>META-INF/persistence.xml</exclude>
                    					<!-- if don't exclude persistence.xml, it will show up in multiple places and got this error
                    					Error: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [spring/db.xml]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Conflicting persistence unit definitions for name 'DASHBOARD': file:/yarn/nm/usercache/cloudera/filecache/222/station-app-1.0-SNAPSHOT.jar, file:/yarn/nm/usercache/cloudera/appcache/application_1423763223531_0002/filecache/10/job.jar/job.jar
                    					we need to pack this persistence.xml in a standalone jar file: 
                    					
                    					cd src\main\resources
										jar -cvf p.jar META-INF
                    					
                    					 hadoop jar station-app-1.0-SNAPSHOT.jar com.cmti.analytics.app.station.task.mapreduce.sig.RecordSigMR  -libjars  p.jar    -D mapred.map.child.java.opts="-Dsite=gmo -Dlog4j.configurationFile=log4j2/log4j2_prod.xml" -D mapred.reduce.child.java.opts="-Dsite=gmo -Dlog4j.configurationFile=log4j2/log4j2_prod.xml"  
 
                    					
                    					  -->
                  					</excludes>
                  					<!-- includes>
                    					<include>org/apache/hadoop/hbase/client/RpcRetryingCallerFactory.class</include>
                  					</includes -->
                				</filter>
              				</filters>
							<!-- >artifactSet>
								<excludes>
									<exclude>junit:junit</exclude>
								</excludes>
							</artifactSet-->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

<!-- http://caffeinbean.wordpress.com/2011/03/01/hadoop-failed-to-set-setxincludeawaretrue-for-parser-error-and-how-to-resolve-it/ -->
    <dependencies> 
    
  	<dependency>
		<groupId>com.cmti</groupId>
		<artifactId>tracking-lib</artifactId>
		<version>${global.version}</version>
	</dependency>
   
    	<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>    
    
    	<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.3.2</version>
		</dependency>
            
    	<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.12.4</version>
		</dependency>
            
    	<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
		</dependency>
            
    	<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
            
    	<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>
            
        <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
            
    	<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.50</version>
		</dependency>
                    
        <dependency>
    		<groupId>xerces</groupId>
    		<artifactId>xercesImpl</artifactId>
    		<version>2.11.0</version>
		</dependency>

		<dependency>
    		<groupId>xalan</groupId>
    		<artifactId>xalan</artifactId>
    		<version>2.7.1</version>
		</dependency>

<!-- http://www.cloudera.com/content/cloudera-content/cloudera-docs/CDH5/latest/CDH-Version-and-Packaging-Information/cdhvd_cdh5_maven_repo.html -->
		<dependency>
    	    <groupId>org.apache.hadoop</groupId>
    	    <artifactId>hadoop-mapreduce-client-app</artifactId>
    	    <version>${hadoop.version}</version>  
		</dependency>

		<dependency>
    	    <groupId>org.apache.hadoop</groupId>
    	    <artifactId>hadoop-mapreduce-client-common</artifactId>
    	    <version>${hadoop.version}</version>  
		</dependency>

		<dependency>
    	    <groupId>org.apache.hadoop</groupId>
    	    <artifactId>hadoop-mapreduce-client-core</artifactId>
    	    <version>${hadoop.version}</version>  
		</dependency>

		<dependency>
    	    <groupId>org.apache.hadoop</groupId>
    	    <artifactId>hadoop-common</artifactId>
    	    <version>${hadoop.version}</version>  
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-annotations</artifactId>
			<version>${hadoop.version}</version>
		</dependency>

		<dependency>
    	    <groupId>org.apache.hbase</groupId>
    	    <artifactId>hbase-client</artifactId>
    	    <version>${hbase.version}</version>
		</dependency>

		<dependency>
    	    <groupId>org.apache.hbase</groupId>
    	    <artifactId>hbase-common</artifactId>
    	    <version>${hbase.version}</version>
		</dependency>

		<dependency>
    	    <groupId>org.apache.hbase</groupId>
    	    <artifactId>hbase-hadoop2-compat</artifactId>
    	    <version>${hbase.version}</version>
		</dependency>

		<dependency>
    	    <groupId>org.apache.hbase</groupId>
    	    <artifactId>hbase-server</artifactId>
    	    <version>${hbase.version}</version>
		</dependency>
  		<!-- This first dependency includes all the JPA implementations for the DAOs -->
		<dependency>
    	    <groupId>com.googlecode.genericdao</groupId>
    	    <artifactId>dao</artifactId>
    	    <version>1.2.0</version>  
		</dependency>
		<!-- This second one includes the Hibernate Entity Manager plugin for the framework -->
		<dependency>
      	  <groupId>com.googlecode.genericdao</groupId>
     	   <artifactId>search-jpa-hibernate</artifactId>
        	<version>1.2.0</version>  
		</dependency>

	    <dependency>
  			<groupId>org.hibernate</groupId>
  			<artifactId>hibernate-c3p0</artifactId>
  			<version>${hibernate.version}</version>
		</dependency>

	    <dependency>
  			<groupId>org.freemarker</groupId>
  			<artifactId>freemarker</artifactId>
  			<version>2.3.20</version>
		</dependency>

        <dependency>
        	<groupId>org.springframework</groupId>
        	<artifactId>spring-context</artifactId>
        	<version>${spring.version}</version>
    	</dependency>
        <dependency>
        	<groupId>org.springframework</groupId>
        	<artifactId>spring-context-support</artifactId>
        	<version>${spring.version}</version>
    	</dependency>
	    <dependency>
   			<groupId>org.springframework</groupId>
  			<artifactId>spring-webmvc</artifactId>
   			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>            
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
        <dependency>
   			<groupId>org.hibernate</groupId>
   			<artifactId>hibernate-entitymanager</artifactId>
   			<version>${hibernate.version}</version>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.17</version>
		</dependency>
            
        
        <dependency>
    		<groupId>javax.servlet</groupId>
    		<artifactId>servlet-api</artifactId>
    		<version>2.5</version>
    		<scope>provided</scope> <!--  specify the "provided" scope so the api.jar isn't included in the war file.
    		In eclipse one needs to manually add the servlet-api-2.5.jar from local Maven repo. -->
		</dependency>
		<dependency>
    		<groupId>javax.servlet</groupId>
	        <artifactId>jstl</artifactId>
	        <version>1.2</version>
		</dependency>
		
		<!-- dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency-->
		
  		<dependency>
    		<groupId>org.apache.logging.log4j</groupId>
    		<artifactId>log4j-api</artifactId>
    		<version>2.0.2</version>
  		</dependency>
  		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
    		<artifactId>log4j-core</artifactId>
    		<version>2.0.2</version>
  		</dependency>
  		
    		
        <!-- dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.10</version>
		</dependency -->
            
    	<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version> 
		</dependency>
            
	</dependencies>


	<repositories>
		<repository>
			<id>alternate repo</id>
			<url>https://maven.nuxeo.org/nexus/content/repositories/public/</url>
		</repository>

		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>

        <repository>
          <id>maven2-repository.dev.java.net</id>
          <name>Java.net Repository for Maven</name>
          <url>http://download.java.net/maven/2/</url>
          <layout>default</layout>
        </repository>
                
        <repository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/libs-snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
        
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
    
    <repository><!-- for storm -->
  		<id>clojars.org</id>
  		<url>http://clojars.org/repo</url>
	</repository>
        <!--repository>
        	<id>sonatype-oss-repo for hibernate-dao</id>
        	<name>Sonatype Open Source maven snapshot repo</name>
        	<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
        <repository>
            <id>jboss</id>
            <url>http://cvs.apache.org/maven-snapshot-repository</url>
            <snapshots><enabled>true</enabled></snapshots>
        </repository -->
	</repositories>

</project>
